-- STEP 1: CREATING A CTE OF A LIST OF MAX STATUSES OF EACH SUBSCRIPTION ID:

select
    psl.subscription_id,
    max(psl.status_id) as max_status
from
    public.payment_status_log psl
group by
    1


-- STEP 2: CATEGORIZING PAYMENT STATUSES IN ORDER TO COUNT THE NUMBER OF PAYMENT FUNNEL STAGES EACH YEAR TO SHOWCASE THE DISTRIBUTION:

with max_status_reached as (
    select
        psl.subscription_id,
        max(psl.status_id) as max_status
    from
        public.payment_status_log psl
    group by
        1
)
,
payment_funnel_stages as (
    select
        subs.subscription_id,
        date_trunc('year', order_date) as order_year,
        current_payment_status,
        max_status,
        case
            when max_status = 1 then 'Payment Widget Opened'
            when max_status = 2 then 'Payment Entered'
            when max_status = 3 and current_payment_status = 0 then 'User Error with Payment Submission'
            when max_status = 3 and current_payment_status != 0 then 'Payment Submitted'
            when max_status = 4 and current_payment_status = 0 then 'Payment Processing Error with Vendor'
            when max_status = 4 and current_payment_status != 0 then 'Payment Success with Vendor'
            when max_status = 5 then 'Complete'
            when max_status is null then 'User Has Not Started Payment Process'
            end as payment_funnel_stage
    from
        public.subscriptions subs
    left join
        max_status_reached m on
        subs.subscription_id = m.subscription_id
)
select
    payment_funnel_stage,
    order_year,
    count(*) as num_subs,
from
    payment_funnel_stages
group by
    1, 2
order by
    2, 3 desc


-- STEP 3: COMPUTING THE CONVERSION RATE AND WORKFLOW COMPLETION RATE:

with max_status_reached as (
    select
        psl.subscription_id,
        max(psl.status_id) as max_status
    from
        public.payment_status_log psl
    group by
        1
)
,
payment_funnel_stages as (
    select
        subs.subscription_id,
        date_trunc('year', order_date) as order_year,
        current_payment_status,
        max_status,
        case when max_status = 5 then 1 else 0 end as completed_payment,
        case when max_status is not null then 1 else 0 end as started_payment
    from
        public.subscriptions subs
    left join
        max_status_reached m on
        subs.subscription_id = m.subscription_id
)
select
    sum(completed_payment) as num_subs_completed_payment,
    sum(started_payment) as num_subs_started_payment,
    count(*) as total_subs,
    num_subs_completed_payment * 100 / total_subs as conversion_rate,
    num_subs_completed_payment * 100 / num_subs_started_payment as workflow_completion_rate
from
    payment_funnel_stages


-- STEP 4: COMPUTING THE ERROR RATE & CREATING ITS BAR CHART:

with error_subs as (
    select
        distinct subscription_id
    from
        public.payment_status_log
    where
        status_id = 0
)
select
    count(err.subscription_id) * 100 / count(subs.subscription_id) as perc_subs_hit_error
from
    public.subscriptions subs
left join
    error_subs err
    on subs.subscription_id = err.subscription_id


with error_subs as (
    select
        distinct subscription_id
    from
        public.payment_status_log
    where
        status_id = 0
)
select
    subs.subscription_id,
    case when err.subscription_id is not null then 1 else 0 end as has_error
from
    public.subscriptions subs
left join
    error_subs err
    on subs.subscription_id = err.subscription_id


-- ALTERNATE STEP 2 USING WINDOWS FUNCTIONS TO CALCULATE THE CURRENT STATUS INSTEAD OF THE CURRENT PAYMENT STATUS:

with max_status_reached as(
    select
        subscription_id,
        max(status_id) as max_status
    from
        public.payment_status_log
    group by
        1
),
subs_current_status as(
select
    subscription_id,
    status_id as current_status,
    movement_date,
    row_number() over(partition by subscription_id order by movement_date desc) as most_recent_status
from
    public.payment_status_log
qualify
    most_recent_status = 1
),
payment_funnel_stages as(
    select
        subs.subscription_id,
        date_trunc('year', order_date) as order_year,
        current_status,
        max_status,
        case
            when max_status = 1 then 'Payment Widget Opened'
            when max_status = 2 then 'Payment Entered'
            when max_status = 3 and current_payment_status = 0 then 'User Error With Payment Submission'
            when max_status = 3 and current_payment_status != 0 then 'Payment Submitted'
            when max_status = 4 and current_payment_status = 0 then 'Payment Processing Error With Vendor'
            when max_status = 4 and current_payment_status != 0 then 'Payment Success W/ Vendor'
            when max_status = 5 then 'Complete'
            when max_status is null then 'User Has Not Started Payment'
            end as payment_funnel_stage
    from
        subscriptions subs
    left join
        max_status_reached m
        on subs.subscription_id = m.subscription_id
    left join
        subs_current_status curr
        on subs.subscription_id = curr.subscription_id
)

select
    payment_funnel_stage,
    count(*) as num_subs
from
    payment_funnel_stages
group by
    1
